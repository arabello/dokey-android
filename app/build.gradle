apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.rocketguys.dokey"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 3
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0-rc01'
    implementation 'com.android.support:preference-v7:28.0.0-rc01'
    implementation 'com.android.support:design:28.0.0-rc01'
    implementation 'com.android.support:support-vector-drawable:28.0.0-rc01'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0-rc01'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'io.matteopellegrino:pagedgrid:0.0.6'

    // Slider
    implementation 'com.sdsmdg.harjot:croller:1.0.7'

    // Blur effect
    implementation 'jp.wasabeef:blurry:2.1.1'

    // QR code
    implementation('com.journeyapps:zxing-android-embedded:3.6.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.0'

    // Fancy loading stuff
    implementation 'com.wang.avi:library:2.1.3'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'
}

/**
 * Used to extract the JAR from the Connect library repository
 */
task updateRemoteConnectDependency() {
    ext.repositoryUrl = "http://federicoterzi.com/remotekey-connect/"

    doLast {
        // Get the current jar filename
        def currentJarFilename = new URL(repositoryUrl + "/current.txt").getText()
        println "Repository version: " + currentJarFilename

        // Make sure the project version is updated
        def checkFile = new File("app/libs/" + currentJarFilename)
        if (checkFile.isFile()) {
            println "Project JAR is already updated."
        } else {
            println "Updating project JAR..."
            // Download the JAR file
            URL jarURL = new URL(repositoryUrl + currentJarFilename)
            InputStream i = jarURL.openStream()
            def fout = new FileOutputStream(new File("app/libs/" + currentJarFilename))
            int c
            while ((c = i.read()) >= 0) {
                fout.write(c)
            }

            fout.close()
        }
    }
}